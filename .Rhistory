library(tidytext)
df <- read.csv("DemDebates.csv", colClasses = c("factor","factor","character"))
df <- df %>%
filter(!character %in% c("(Unknown)", "Announcer","Bash","Bridgewater","Burnett","Cooper","Davis","Diaz-Balart","Guthrie","Holt","Jose Diaz-Balart","Lacey","Lemon","Lester Holt", "Maddow","Muir","Protesters","Protestor","Ramos","Savannah Guthrie","Stephanopoulos","Tapper","Todd","Unknown"))
options(scipen = 999)
df %>% unnest_tokens(word, "text", token = "ngrams", n =1)
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
count(character, word)
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
count(character, word) %>%
arrange(character, -n)
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
count(character, word) %>%
top_n(n, n = 5) %>%
arrange(character, -n) %>%
df %>%
unnest_tokens(trigram, "text", token = "ngrams", n = 3) %>%
count(character, trigram) %>%
bind_tf_idf(trigram, character,n) %>%
group_by(character) %>%
top_n(tf_idf, n = 5) %>%
mutate(rank = rank(tf_idf, ties.method = "random")) %>%
arrange(character, rank) %>%
filter(rank <=5) %>%
ggplot(aes(x = reorder_within(trigram, tf_idf, character),
y = tf_idf,
color = character,
fill = character)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~character, scales = "free") +
coord_flip() +
theme_fivethirtyeight() +
theme(legend.position = "None")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
count(character, word) %>%
top_n(n, n = 5) %>%
arrange(character, -n)
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
count(character, word) %>%
top_n(n, n = 5) %>%
arrange(character, -n)
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
count(character, word) %>%
top_n(n, n = 5) %>%
arrange(character, -n)
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
count(character, word) %>%
group_by(character) %>%
top_n(n, n = 5) %>%
arrange(character, -n)
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
anti_join(stop_words) %>%
count(character, word) %>%
group_by(character) %>%
top_n(n, n = 5) %>%
arrange(character, -n)
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
anti_join(stop_words) %>%
count(character, word) %>%
group_by(character) %>%
top_n(n, n = 5) %>%
arrange(character, -n) %>%
ggplot(aes(x = reorder_within(word, n, character), y  = n)) + geom_col() +
facet_wrap(~character, scales ="free") + coord_flip()
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
anti_join(stop_words) %>%
count(character, word) %>%
group_by(character) %>%
top_n(n, n = 5) %>%
arrange(character, -n) %>%
ggplot(aes(x = reorder_within(word, n, character),
y  = n)) +
geom_col() +
facet_wrap(~character, scales ="free") +
coord_flip()
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
anti_join(stop_words) %>%
count(character, word) %>%
group_by(character) %>%
top_n(n, n = 5) %>%
arrange(character, -n) %>%
ggplot(aes(x = reorder_within(word, n, character),
y  = n)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~character, scales ="free") +
coord_flip()
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
anti_join(stop_words) %>%
count(character, word) %>%
group_by(character) %>%
top_n(n, n = 5) %>%
arrange(character, -n) %>%
ggplot(aes(x = reorder_within(word, n, character),
y  = n,
fill = character)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~character, scales ="free") +
coord_flip()
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
anti_join(stop_words) %>%
count(character, word) %>%
group_by(character) %>%
top_n(n, n = 5) %>%
arrange(character, -n) %>%
ggplot(aes(x = reorder_within(word, n, character),
y  = n,
fill = character)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~character, scales ="free") +
coord_flip() +
theme(legend.position = "None")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
anti_join(stop_words) %>%
count(character, word) %>%
group_by(character) %>%
top_n(n, n = 5) %>%
arrange(character, -n) %>%
ggplot(aes(x = reorder_within(word, n, character),#Reorders the words by freq
y  = n,
fill = character)) +
geom_col() +
scale_x_reordered() + #Reorders the words
facet_wrap(~character, scales ="free") + #Creates individual graphs
coord_flip() +
theme(legend.position = "None")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =2) %>%
anti_join(stop_words) %>%
count(character, word) %>%
group_by(character) %>%
top_n(n, n = 5) %>%
arrange(character, -n) %>%
ggplot(aes(x = reorder_within(word, n, character),#Reorders the words by freq
y  = n,
fill = character)) +
geom_col() +
scale_x_reordered() + #Reorders the words
facet_wrap(~character, scales ="free") + #Creates individual graphs
coord_flip() +
theme(legend.position = "None")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =2)
df %>%
unnest_tokens(word, "text", token = "ngrams", n =2) %>%
separate(word, c("word1","word2"), sep = " ")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =2) %>%
separate(word, c("word1","word2"), sep = " ") %>%
filter(word1 %in% stop_words | word2 %in% stop_words)
df %>%
unnest_tokens(word, "text", token = "ngrams", n =2) %>%
separate(word, c("word1","word2"), sep = " ") %>%
filter(word1 %in% stop_words$word | word2 %in% stop_words$word)
df %>%
unnest_tokens(word, "text", token = "ngrams", n =2) %>%
separate(word, c("word1","word2"), sep = " ") %>%
filter(word1 %in% stop_words$word | word2 %in% stop_words$word) %>%
unite(c("word1","word2"), "bigram", sep = " ")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =2) %>%
separate(word, c("word1","word2"), sep = " ") %>%
filter(word1 %in% stop_words$word | word2 %in% stop_words$word) %>%
unite(c("word1","word2"), "bigram", sep = "")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =2) %>%
separate(word, c("word1","word2"), sep = " ") %>%
filter(word1 %in% stop_words$word | word2 %in% stop_words$word) %>%
unite()
df %>%
unnest_tokens(word, "text", token = "ngrams", n =2) %>%
separate(word, c("word1","word2"), sep = " ") %>%
filter(word1 %in% stop_words$word | word2 %in% stop_words$word) %>%
unite(word1, word2)
df %>%
unnest_tokens(word, "text", token = "ngrams", n =2) %>%
separate(word, c("word1","word2"), sep = " ") %>%
filter(word1 %in% stop_words$word | word2 %in% stop_words$word) %>%
unite(word1, word2, sep = " ")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =2) %>%
separate(word, c("word1","word2"), sep = " ") %>%
filter(word1 %in% stop_words$word | word2 %in% stop_words$word) %>%
unite("bigram", c(word1, word2), sep = " ")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =2) %>%
separate(word, c("word1","word2"), sep = " ") %>%
filter(word1 %in% stop_words$word | word2 %in% stop_words$word) %>%
unite("bigram", c(word1, word2), sep = " ") %>%
count(character,bigram) %>%
top_n(n, n = 5) %>%
arrange(character, -n) %>%
ggplot(aes(x = reorder_within(word, n, character),#Reorders the words by freq
y  = n,
fill = character)) +
geom_col() +
scale_x_reordered() + #Reorders the words
facet_wrap(~character, scales ="free") + #Creates individual graphs
coord_flip() +
theme(legend.position = "None")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =2) %>%
separate(word, c("word1","word2"), sep = " ") %>%
filter(word1 %in% stop_words$word | word2 %in% stop_words$word) %>%
unite("bigram", c(word1, word2), sep = " ") %>%
count(character,bigram)
df %>%
unnest_tokens(word, "text", token = "ngrams", n =2) %>%
separate(word, c("word1","word2"), sep = " ") %>%
filter(word1 %in% stop_words$word | word2 %in% stop_words$word) %>%
unite("bigram", c(word1, word2), sep = " ") %>%
count(character,bigram) %>%
top_n(n, n = 5) %>%
arrange(character, -n) %>%
ggplot(aes(x = reorder_within(bigram, n, character),#Reorders the words by freq
y  = n,
fill = character)) +
geom_col() +
scale_x_reordered() + #Reorders the words
facet_wrap(~character, scales ="free") + #Creates individual graphs
coord_flip() +
theme(legend.position = "None")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =2) %>%
separate(word, c("word1","word2"), sep = " ") %>%
filter(word1 %in% stop_words$word | word2 %in% stop_words$word) %>%
unite("bigram", c(word1, word2), sep = " ") %>%
count(character,bigram) %>%
group_by(character) %>%
top_n(n, n = 5) %>%
arrange(character, -n) %>%
ggplot(aes(x = reorder_within(bigram, n, character),#Reorders the words by freq
y  = n,
fill = character)) +
geom_col() +
scale_x_reordered() + #Reorders the words
facet_wrap(~character, scales ="free") + #Creates individual graphs
coord_flip() +
theme(legend.position = "None")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =2) %>%
separate(word, c("word1","word2"), sep = " ") %>%
filter(!word1 %in% stop_words$word | !word2 %in% stop_words$word) %>%
unite("bigram", c(word1, word2), sep = " ") %>%
count(character,bigram) %>%
group_by(character) %>%
top_n(n, n = 5) %>%
arrange(character, -n) %>%
ggplot(aes(x = reorder_within(bigram, n, character),#Reorders the words by freq
y  = n,
fill = character)) +
geom_col() +
scale_x_reordered() + #Reorders the words
facet_wrap(~character, scales ="free") + #Creates individual graphs
coord_flip() +
theme(legend.position = "None")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =2) %>%
count(debate, word) %>%
group_by(debate) %>%
top_n(n, n = 5) %>%
ggplot(aes(x = reorder_within(word, n, debate),#Reorders the words by freq
y  = n,
fill = debate)) +
geom_col() +
scale_x_reordered() + #Reorders the words
facet_wrap(~debate, scales ="free") + #Creates individual graphs
coord_flip() +
theme(legend.position = "None")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
count(debate, word) %>%
group_by(debate) %>%
top_n(n, n = 5) %>%
ggplot(aes(x = reorder_within(word, n, debate),#Reorders the words by freq
y  = n,
fill = debate)) +
geom_col() +
scale_x_reordered() + #Reorders the words
facet_wrap(~debate, scales ="free") + #Creates individual graphs
coord_flip() +
theme(legend.position = "None")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
anti_join(stop_words) %>%
count(debate, word) %>%
group_by(debate) %>%
top_n(n, n = 5) %>%
ggplot(aes(x = reorder_within(word, n, debate),#Reorders the words by freq
y  = n,
fill = debate)) +
geom_col() +
scale_x_reordered() + #Reorders the words
facet_wrap(~debate, scales ="free") + #Creates individual graphs
coord_flip() +
theme(legend.position = "None")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
count(debate, word) %>%
bind_tf_idf(word, debate, n) %>%
group_by(debate) %>%
top_n(n, n = 5) %>%
ggplot(aes(x = reorder_within(word, n, debate),
y  = n,
fill = debate)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~debate, scales ="free") +
coord_flip() +
theme(legend.position = "None")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
count(character, word) %>%
bind_tf_idf(word, character, n) %>%
group_by(character) %>%
top_n(n, n = 5) %>%
ggplot(aes(x = reorder_within(word, n, character),
y  = n,
fill = character)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~character, scales ="free") +
coord_flip() +
theme(legend.position = "None")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
count(debate, word) %>%
bind_tf_idf(word, debate, n) %>%
group_by(debate) %>%
top_n(tf_idf, n = 5) %>%
ggplot(aes(x = reorder_within(word, tf_idf, debate), y = tf_idf, fill = debate)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~debate, scales = "free") +
coord_flip() +
theme(legend.position = "none")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
count(word, word) %>%
bind_tf_idf(word, debate, n) %>%
group_by(debate) %>%
top_n(tf_idf, n = 5) %>%
ggplot(aes(x = reorder_within(word, tf_idf, debate), y = tf_idf, fill = debate)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~debate, scales = "free") +
coord_flip() +
theme(legend.position = "none")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
count(debate, word) %>%
bind_tf_idf(word, debate, n) %>%
group_by(debate) %>%
top_n(tf_idf, n = 5) %>%
ggplot(aes(x = reorder_within(word, tf_idf, debate), y = tf_idf, fill = debate)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~debate, scales = "free") +
coord_flip() +
theme(legend.position = "none")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
count(character, word) %>%
bind_tf_idf(word, character, n) %>%
group_by(character) %>%
top_n(tf_idf, n = 5) %>%
ggplot(aes(x = reorder_within(word, tf_idf, character), y = tf_idf, fill = character)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~character, scales = "free") +
coord_flip() +
theme(legend.position = "none")
df %>%
unnest_tokens(trigram, "text", token = "ngrams", n = 3) %>%
count(character, trigram) %>%
bind_tf_idf(trigram, character,n) %>%
group_by(character) %>%
top_n(tf_idf, n = 5) %>%
mutate(rank = rank(tf_idf, ties.method = "random")) %>%
arrange(character, rank) %>%
filter(rank <=5) %>%
ggplot(aes(x = reorder_within(trigram, tf_idf, character),
y = tf_idf,
color = character,
fill = character)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~character, scales = "free") +
coord_flip() +
theme_fivethirtyeight() +
theme(legend.position = "None")
df %>%
unnest_tokens(trigram, "text", token = "ngrams", n = 3) %>%
count(character, trigram) %>%
bind_tf_idf(trigram, character,n) %>%
group_by(character) %>%
top_n(tf_idf, n = 5) %>%
mutate(rank = rank(tf_idf, ties.method = "random")) %>%
arrange(character, rank) %>%
filter(rank <=5) %>%
ggplot(aes(x = reorder_within(trigram, tf_idf, character),
y = tf_idf,
color = character,
fill = character)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~character, scales = "free") +
coord_flip() +
theme(legend.position = "None")
library(tidyverse)
library(tidytext)
df <- read.csv("DemDebates.csv", colClasses = c("factor","factor","character"))
df <- df %>%
filter(!character %in% c("(Unknown)", "Announcer","Bash","Bridgewater","Burnett","Cooper","Davis","Diaz-Balart","Guthrie","Holt","Jose Diaz-Balart","Lacey","Lemon","Lester Holt", "Maddow","Muir","Protesters","Protestor","Ramos","Savannah Guthrie","Stephanopoulos","Tapper","Todd","Unknown"))
options(scipen = 999)
df %>%
unnest_tokens(trigram, "text", token = "ngrams", n = 3) %>%
count(character, trigram) %>%
bind_tf_idf(trigram, character,n) %>%
group_by(character) %>%
top_n(tf_idf, n = 5) %>%
mutate(rank = rank(tf_idf, ties.method = "random")) %>%
arrange(character, rank) %>%
filter(rank <=5) %>%
ggplot(aes(x = reorder_within(trigram, tf_idf, character),
y = tf_idf,
color = character,
fill = character)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~character, scales = "free") +
coord_flip() +
theme(legend.position = "None")
df %>%
unnest_tokens(trigram, "text", token = "ngrams", n = 3) %>%
count(character, trigram) %>%
bind_tf_idf(trigram, character,n) %>%
group_by(character) %>%
top_n(tf_idf, n = 5) %>%
mutate(rank = rank(tf_idf, ties.method = "random")) %>%
arrange(character, rank) %>%
filter(rank <=5) %>%
ggplot(aes(x = reorder_within(trigram, tf_idf, character),
y = tf_idf,
color = character,
fill = character,
label = n)) +
geom_col() +
geom_label(aes(y = tf_idf/2))
df %>%
unnest_tokens(trigram, "text", token = "ngrams", n = 3) %>%
count(character, trigram) %>%
bind_tf_idf(trigram, character,n) %>%
group_by(character) %>%
top_n(tf_idf, n = 5) %>%
mutate(rank = rank(tf_idf, ties.method = "random")) %>%
arrange(character, rank) %>%
filter(rank <=5) %>%
ggplot(aes(x = reorder_within(trigram, tf_idf, character),
y = tf_idf,
color = character,
fill = character)) +
geom_col() +
geom_label(aes(y = tf_idf/2))
df %>%
unnest_tokens(trigram, "text", token = "ngrams", n = 3) %>%
count(character, trigram) %>%
bind_tf_idf(trigram, character,n) %>%
group_by(character) %>%
top_n(tf_idf, n = 5) %>%
mutate(rank = rank(tf_idf, ties.method = "random")) %>%
arrange(character, rank) %>%
filter(rank <=5) %>%
ggplot(aes(x = reorder_within(trigram, tf_idf, character),
y = tf_idf,
color = character,
fill = character)) +
geom_col() +
geom_label(aes(y = tf_idf/2, x = trigram, label = n))+
scale_x_reordered() +
facet_wrap(~character, scales = "free") +
coord_flip() +
theme(legend.position = "None")
df %>%
unnest_tokens(word, "text", token = "ngrams", n =1) %>%
count(character, word) %>%
bind_tf_idf(word, character, n) %>%
group_by(character) %>%
top_n(tf_idf, n = 5) %>%
ggplot(aes(x = reorder_within(word, tf_idf, character), y = tf_idf, fill = character)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~character, scales = "free") +
coord_flip() +
theme(legend.position = "none")
